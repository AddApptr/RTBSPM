// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name GraviteRTBAppLovinMediationAdapter
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AppLovinSDK
import Foundation
@_exported import GraviteRTBAppLovinMediationAdapter
import RTBSDK
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc public class RTBAppLovinManager : ObjectiveC.NSObject {
  @objc public static let shared: GraviteRTBAppLovinMediationAdapter.RTBAppLovinManager
  @objc public func initialize(with parameters: any AppLovinSDK.MAAdapterInitializationParameters) -> Swift.Bool
  @objc public func prepareItunesId(parameters: any AppLovinSDK.MAAdapterParameters)
  @objc public static func logMessage(_ message: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
@objc public class RTBAppLovinInterstitialLoader : ObjectiveC.NSObject {
  @objc public init(interstitialDelegate: (any AppLovinSDK.MAInterstitialAdapterDelegate)? = nil)
  @objc public func load(parameters: any AppLovinSDK.MAAdapterResponseParameters)
  @objc public func show(controller: UIKit.UIViewController?)
  @objc public func destroy()
  @objc deinit
}
extension GraviteRTBAppLovinMediationAdapter.RTBAppLovinInterstitialLoader : RTBSDK.RTBFullscreenDelegate {
  @objc dynamic public func fullscreenAdDidReceiveAd(_ fullscreenAd: RTBSDK.RTBFullscreenAd, bidInfo: RTBSDK.RTBBidInfo, networkName: Swift.String)
  @objc dynamic public func fullscreenAd(_ fullscreenAd: RTBSDK.RTBFullscreenAd, didFailToReceiveAd errorMessage: Swift.String, networkName: Swift.String)
  @objc dynamic public func fullscreenAdDidRecordClick(_ fullscreenAd: RTBSDK.RTBFullscreenAd, networkName: Swift.String)
  @objc dynamic public func fullscreenAdDidPauseForAd(_ fullscreenAd: RTBSDK.RTBFullscreenAd, networkName: Swift.String)
  @objc dynamic public func fullscreenAdDidResumeAfterAd(_ fullscreenAd: RTBSDK.RTBFullscreenAd, networkName: Swift.String)
}
@objc public class RTBAppLovinBannerLoader : ObjectiveC.NSObject {
  @objc public init(bannerDelegate: (any AppLovinSDK.MAAdViewAdapterDelegate)? = nil)
  @objc public func load(parameters: any AppLovinSDK.MAAdapterResponseParameters, adFormat: AppLovinSDK.MAAdFormat)
  @objc public func destroy()
  @objc deinit
}
extension GraviteRTBAppLovinMediationAdapter.RTBAppLovinBannerLoader : RTBSDK.RTBBannerViewDelegate {
  @objc dynamic public func bannerViewDidReceiveAd(_ bannerView: RTBSDK.RTBBannerView, bidInfo: RTBSDK.RTBBidInfo, networkName: Swift.String)
  @objc dynamic public func bannerView(_ bannerView: RTBSDK.RTBBannerView, didFailToRender errorMessage: Swift.String, networkName: Swift.String)
  @objc dynamic public func bannerView(_ bannerView: RTBSDK.RTBBannerView, didFailToReceiveAd errorMessage: Swift.String, networkName: Swift.String)
  @objc dynamic public func bannerViewDidRecordClick(_ bannerView: RTBSDK.RTBBannerView, networkName: Swift.String)
  @objc dynamic public func bannerViewDidPauseForAd(_ bannerView: RTBSDK.RTBBannerView, networkName: Swift.String)
  @objc dynamic public func bannerViewDidResumeAfterAd(_ bannerView: RTBSDK.RTBBannerView, networkName: Swift.String)
}
@objc public class RTBAppLovinRewardedVideoLoader : ObjectiveC.NSObject {
  @objc public init(rewardedAdDelegate: (any AppLovinSDK.MARewardedAdapterDelegate)? = nil)
  @objc public func load(parameters: any AppLovinSDK.MAAdapterResponseParameters)
  @objc public func show(controller: UIKit.UIViewController?)
  @objc public func destroy()
  @objc deinit
}
extension GraviteRTBAppLovinMediationAdapter.RTBAppLovinRewardedVideoLoader : RTBSDK.RTBRewardedVideoAdDelegate {
  @objc dynamic public func rewardedVideoAdDidReceiveAd(_ rewardedVideoAd: RTBSDK.RTBRewardedVideoAd, bidInfo: RTBSDK.RTBBidInfo, networkName: Swift.String)
  @objc dynamic public func rewardedVideoAd(_ rewardedVideoAd: RTBSDK.RTBRewardedVideoAd, didFailToReceiveAd errorMessage: Swift.String, networkName: Swift.String)
  @objc dynamic public func rewardedVideoAdDidRecordClick(_ rewardedVideoAd: RTBSDK.RTBRewardedVideoAd, networkName: Swift.String)
  @objc dynamic public func rewardedVideoAdDidPauseForAd(_ rewardedVideoAd: RTBSDK.RTBRewardedVideoAd, networkName: Swift.String)
  @objc dynamic public func rewardedVideoAdDidResumeAfterAd(_ rewardedVideoAd: RTBSDK.RTBRewardedVideoAd, networkName: Swift.String)
  @objc dynamic public func rewardedVideoAdDidReceiveReward(_ rewardedVideoAd: RTBSDK.RTBRewardedVideoAd, networkName: Swift.String)
}
@objc public class RTBAppLovinNativeLoader : ObjectiveC.NSObject {
  @objc public init(nativeDelegate: (any AppLovinSDK.MANativeAdAdapterDelegate)? = nil)
  @objc public func load(parameters: any AppLovinSDK.MAAdapterResponseParameters)
  @objc deinit
}
extension GraviteRTBAppLovinMediationAdapter.RTBAppLovinNativeLoader : RTBSDK.RTBNativeAdLoaderDelegate {
  @objc dynamic public func nativeAdDidReceiveAd(_ nativeAdLoader: RTBSDK.RTBNativeAdLoader, bidInfo: RTBSDK.RTBBidInfo, networkName: Swift.String)
  @objc dynamic public func nativeAdView(_ nativeAdLoader: RTBSDK.RTBNativeAdLoader, didFailToReceiveAd errorMessage: Swift.String, networkName: Swift.String)
}
extension GraviteRTBAppLovinMediationAdapter.RTBAppLovinNativeLoader : RTBSDK.RTBNativeAdInteractionDelegate {
  @objc dynamic public func nativeAdView(_ nativeAd: RTBSDK.RTBNativeAd, didFailToRender errorMessage: Swift.String, networkName: Swift.String)
  @objc dynamic public func nativeAdDidRecordClick(_ nativeAd: RTBSDK.RTBNativeAd, networkName: Swift.String)
  @objc dynamic public func nativeAdDidPauseForAd(_ nativeAd: RTBSDK.RTBNativeAd, networkName: Swift.String)
  @objc dynamic public func nativeAdDidResumeAfterAd(_ nativeAd: RTBSDK.RTBNativeAd, networkName: Swift.String)
}
